---
import PageHeader from "../../../components/PageHeader.astro";
import Layout from "../../../layouts/Layout.astro";
import { getLastUpdatedAt, getPage, listTutorialArticles } from "../../../utils";

const page = await getPage("tutorials");

const title = page.title_cn || page.title;
const description = page.description_cn || page.description;
const keywords = page.keywords_cn || page.keywords;
const tutorialsData = await listTutorialArticles({ pageSize: 100 });

// Group tutorials by series dynamically
const tutorials = tutorialsData.data.reduce((acc, item) => {
  const seriesTitle = item.serials?.title_cn || item.serials?.title || 'Uncategorized';
  const seriesDescription = item.serials?.description_cn || item.serials?.description || "";

  // Initialize the series if not present in the accumulator
  if (!acc[seriesTitle]) {
    acc[seriesTitle] = {
      description: seriesDescription,
      articles: [],
    };
  }

  // Add the tutorial to the respective series
  acc[seriesTitle].articles.push({
    title: item.title_cn || item.title,
    link: `/cn/tutorials/${item.slug}`,
    description: item.description_cn || item.description || "",
  });

  return acc;
}, {});

// Convert the tutorials object into an array of series objects for easier mapping
const tutorialSeries = Object.entries(tutorials)
  .map(([seriesTitle, seriesData]) => ({
    seriesTitle,
    description: seriesData.description,
    articles: seriesData.articles,
    // Find the series by matching both localized and original titles
    sort: tutorialsData.data.find(item => 
      (item.serials?.title_cn || item.serials?.title) === seriesTitle
    )?.serials?.sort || 999999
  }))
  .sort((a, b) => a.sort - b.sort);
---

<Layout title={title} description={description} keywords={keywords}>
  <PageHeader title={title} description={description} />
  <section class="section">
    <div class="container">
      <div class="row justify-content-center">
        <div class="col-lg-9">
          <div class="card shadow border-0 rounded">
            <div class="card-body">
              {tutorialSeries.map(series => (
                  <>
                    <h5 class="card-title">{series.seriesTitle}</h5>
                    {series.description && <p class="text-muted">{series.description}</p>}
                    <ul class="list-unstyled text-muted mb-4 pb-4">
                      {series.articles.map(article => (
                          <li>
                            <i data-feather="arrow-right" class="fea icon-sm me-2"></i>
                            <a href={article.link} target="_blank">{article.title}</a>
                            {article.description && ` - ${article.description}`}
                          </li>
                      ))}
                    </ul>
                  </>
                ))}
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
</Layout>
